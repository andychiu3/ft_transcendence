services:
  backend:
    build: ./backend
    container_name: backend
    ports:
     - 3000:3000
    volumes:
     - ./backend:/app
     - backend_node_modules:/app/node_modules
    env_file:
     - .env
    networks:
     - transcendence
    restart:  no

  ws:
    build: ./websocket
    container_name: websocket
    ports:
     - 3001:3001
    volumes:
     - ./websocket:/app
     - ws_node_modules:/app/node_modules
    env_file:
     - .env
    networks:
     - transcendence
    
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
     - 5173:5173
    volumes:
     - ./frontend:/app
     - front_node_modules:/app/node_modules
     - ./frontend_dist:/app/dist
    env_file:
     - .env
    networks:
      - transcendence
    restart: always

  nginx:
    build: ./nginx/
    container_name: nginx
    depends_on:
     - backend
     - ws
    ports:
     - 443:443
    volumes:
     - ./frontend_dist:/usr/share/nginx/html
    networks:
     - transcendence
    restart: always

  # should be able to access status with localhost:9000 in Linux
  # portainer:
  #   image: portainer/portainer-ce
  #   container_name: portainer
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data
  #   networks:
  #     - transcendence
  #   restart: always


volumes:
  backend_node_modules:
    name: backend_node_modules
    driver: local
  ws_node_modules:
    name: ws_node_modules
    driver: local
  front_node_modules:
    name: front_node_modules
    driver: local
  # frontend_dist:
  #   name: frontend_dist
  #   driver: local
  # portainer_data:
  #   name: portainer_data
  #   driver: local

networks:
  transcendence:
    name:  transcendence
  